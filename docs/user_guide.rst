User guide
==========

Installation
------------

Environment
^^^^^^^^^^^
To run the experiment you need to install the required dependencies. 
We highly recommend that you use a virtual environment as provided 
by `conda <https://conda.io/docs/>`_ or `pipenv <https://docs.pipenv.org/>`_.


Then in your environment run::

    $ pip install -r requirements/dev.txt


Sacred setup
^^^^^^^^^^^^
When running experiments, the hyperparameters, metrics and plots are managed through
`Sacred <http://sacred.readthedocs.io>`_ and are stored in a `mongoDB <https://www.mongodb.com/>`_ 
database. Though you can setup your mongoDB instance however you want, it is most 
conveniently done through the 
provided Docker files. This will not only get you started with mongoDB in no time, but will
also set up a `mongo-express <https://github.com/mongo-express/mongo-express>`_ interface to conveniently manage your database and 
`sacredboard <https://github.com/chovanecm/sacredboard>`_ to monitor your runs. In order to use them you need 
to

1. Install `Docker Engine <https://docs.docker.com/install/>`_.
2. Install `Docker Compose <https://docs.docker.com/compose/install/>`_.
3. Navigate to the directory with the setup files.

:: 

    $ cd infractructure/mongo_db

4. Edit the ``.env``. Replace all values in angle brackets with meaningful and secure values. 

5. Run docker-compose::

    docker-compose up -d

mongoDB should now be up and running. ``mongo-express`` should now be available on port ``8081``, accessible by 
the user and password you set in the ``.env`` file. Sacredboard should be available on port ``5000``.

The current setup is optimized for a team that collaboratively stores results on a remote server.
When running the experiments locally for yourself, you should change the port mapping in the 
``docker-compose.yml`` file to only map to localhost, such that you do not expose your database to
the internet. Simply prefix all port mappings with localhost, e.g. replace::

    ports:
    - 5000:5000

by

    ports:
      - 127.0.0.1:5000:5000


5. In a final step, you need to tell sacred how to connect to the database. Edit file 
``deep_bottleneck/credentials.py``, again replacing all values in angle brackets by the 
values you actually set in the ``.env`` file. Additionally, you have to provide the IP 
address of the server your database is running on, which is either the address given 
by your server provider or ``127.0.0.1`` when running mongo locally.

6. You are ready to run some exciting experiments!

How to use the framework
------------------------

Running experiments
^^^^^^^^^^^^^^^^^^^
J
Standard setup to reproduce Tishby's results

what happens

* dataset 
* train network
* mi estimation
* plots






Artifact viewer 
^^^^^^^^^^^^^^^
To make the rich results generated by the experiments accessible, we 
created an evaluation tool. It lets you query experiments based on
id, name or other configuration parameters and lets you view
the generated plots, metrics and videos conveniently in Jupyter 
notebooks. To get you started have a look at 
`deep_bottleneck/eval_tools_demo.ipynb <https://github.com/neuroinfo-os/deep-bottleneck/blob/master/deep_bottleneck/eval_tools_demo.ipynb>`_.



Adding new experiments (config)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
J

explain all parameters
group related experiments in folder to execute them together

* setting seeds
* explain run_experiments.py

